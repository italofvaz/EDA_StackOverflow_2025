# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18T2Ipd3R6Homw1fllGDSHTFEvqYWx3Jz
"""

import pandas as pd
import re
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

sns.set()
sns.set_context('poster')

df = pd.read_csv('/content/survey_results_public.csv', index_col='ResponseId')

df.columns

df_schema = pd.read_csv('/content/survey_results_schema.csv', index_col='qid')

df_schema

#limpando o arquivo que possue trechos de HTML

def remove_html (html):
  pattern = re.compile('<.*?>')
  cleantext = re.sub(pattern, '', html)
  return cleantext.replace('*', '').strip()

for name , description in zip (df_schema['qname'], df_schema['question']):
  print(f'{name} : {remove_html(description)}')

df.info()

def percent (value):
  return f'{100 * value:.2f}%'

#descobrindo dados nulos na base, e tabalhando com eles

#quantidade de valores nulos por coluna
df.isna().sum()

#porcentagem de valores nulos por coluna

(df.isna().sum() / len(df)).sort_values(ascending=False).apply(percent)

#analise grafica dos valores nulos

percent_data = (df.isna().sum() / len(df)).sort_values(ascending=False).apply(percent).reset_index()

percent_data.columns = ['column_name','percent']
percent_data

fig, ax = plt.subplots(figsize=(18,9))

sns.barplot(data=percent_data, x='column_name', y='percent', ax=ax)
fig.suptitle('% null data')
plt.xticks(rotation=80)
ax.set_ylim(0, 100)


# Formatando os rótulos do eixo Y como porcentagem
ax.set_yticks(range(0, 110, 10))  # Define os ticks a cada 10%
ax.set_yticklabels([f"{tick}%" for tick in ax.get_yticks()])


plt.show()

# Encontrando os dados numericos

df.select_dtypes('number')

df[['WorkExp', 'ConvertedCompYearly']].describe().round(2)

#dados nao numericos

df.select_dtypes('object')

df['RemoteWork'].value_counts(normalize=True, dropna=False)

df['RemoteWork'].unique()

df[['Age', 'RemoteWork']].value_counts().sort_index()

#analise grafica

df['WorkExp'].describe()

fig, ax = plt.subplots(figsize=(22,8))

sns.boxplot(data=df, x='WorkExp')
fig.suptitle('Work Eperience Time')

plt.show()

#visualizar os valores reais de cada resposta

ax_noise = np.random.uniform(-0.1, 0.1, len(df))

x_scatter = df['WorkExp'] + ax_noise

y_scatter = np.random.uniform(-0.3, 0.3, len(df))

fig, ax=plt.subplots(figsize=(22,8))

sns.scatterplot(data=df,  ax=ax, x=x_scatter, y=y_scatter, alpha=0.8, s=20)
sns.boxplot(data=df, ax=ax, x='WorkExp')

fig.suptitle('Work Experience Time')

plt.show()

import os

username = "italofvaz" # insira o seu nome de usuário do git
os.environ["GITHUB_USER"] = username

!git config --global user.name "${GITHUB_USER}"

from getpass import getpass

usermail = getpass()
os.environ["GITHUB_MAIL"] = usermail

!git config --global user.email "${GITHUB_MAIL}"

usertoken = getpass()
os.environ["GITHUB_TOKEN"] = usertoken

!git clone https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/italofvaz/EDA_StackOverflow_2025.git

# Commented out IPython magic to ensure Python compatibility.
# Commented out IPython magic to ensure Python compatibility.
#  %cd /content/EDA_StackOverflow_2025/

!git add .

!git commit -m "subindo codigo do colab"

!git push origin main